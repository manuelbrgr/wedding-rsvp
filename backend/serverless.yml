service: rsvp

frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs14.x
  memorySize: 128

  stage: prod
  region: us-east-1

  iamRoleStatements:
    - Effect: Allow
      Action:
        - "ses:SendEmail"
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource: "*"

  environment:
    RESPONSES_TABLE: "${self:service}-responses-${opt:stage, self:provider.stage}"

plugins:
  - serverless-domain-manager

custom:
  customDomain:
    domainName: wedding-api.brgr.rocks
    basePath: ""
    stage: ${self:provider.stage}

functions:
  submitResponse:
    handler: handler_response.submitResponse
    description: Submit response
    events:
      - http:
          path: responses/accept
          method: post
          cors: true
  submitContactform:
    handler: handler_contactform.submit
    description: Submit contact form
    events:
      - http:
          path: contact
          method: post
          cors: true
  # listResponses:
  #   handler: handler_rspv.listResponses
  #  description: Lists all responses
  #  events:
  #    - http:
  #        path: responses
  #        method: get
  #        cors: true

resources:
  Resources:
    ResponsesDynamoDbTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
          - AttributeName: "id"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "id"
            KeyType: "HASH"
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.RESPONSES_TABLE}
